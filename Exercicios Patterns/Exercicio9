interface Relatorio {
    gerar(dados: string[]): void;
}

class PdfRelatorio implements Relatorio {
    gerar(dados: string[]): void {
        console.log(`Gerando relatório em PDF com os dados: ${dados.join(", ")}`);
    }
}

class ExcelRelatorio implements Relatorio {
    gerar(dados: string[]): void {
        console.log(`Gerando relatório em Excel com os dados: ${dados.join(", ")}`);
    }
}

class HtmlRelatorio implements Relatorio {
    gerar(dados: string[]): void {
        console.log(`Gerando relatório em HTML com os dados: ${dados.join(", ")}`);
    }
}

class Gerente {
    solicitarRelatorio(relatorio: Relatorio, dados: string[]): void {
        console.log("Gerente solicitou a geração de um relatório...");
        relatorio.gerar(dados);
    }
}

const gerente = new Gerente();

const dadosRelatorio = ["Vendas: R$5000", "Clientes: 200", "Lucro: R$1500"];

const pdf = new PdfRelatorio();
const excel = new ExcelRelatorio();
const html = new HtmlRelatorio();

gerente.solicitarRelatorio(pdf, dadosRelatorio);
gerente.solicitarRelatorio(excel, dadosRelatorio);
gerente.solicitarRelatorio(html, dadosRelatorio);